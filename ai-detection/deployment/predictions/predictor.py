from abc import ABC, abstractmethod

class Predictor:
    JSON_FIELD_TO_FEATURE = {
        "fid": "Flow ID",
        "srcIp": "Src IP",
        "srcPort": "Src Port",
        "dstIp": "Dst IP",
        "dstPort": "Dst Port",
        "protocol": "Protocol",
        "timestamp": "Timestamp",
        "flowDuration": "Flow Duration",
        "totalFwdPackets": "Total Fwd Packet",
        "totalBwdPackets": "Total Bwd packets",
        "totalFwdLength": "Total Length of Fwd Packet",
        "totalBwdLength": "Total Length of Bwd Packet",
        "fwdPacketLengthMax": "Fwd Packet Length Max",
        "fwdPacketLengthMin": "Fwd Packet Length Min",
        "fwdPacketLengthMean": "Fwd Packet Length Mean",
        "fwdPacketLengthStd": "Fwd Packet Length Std",
        "bwdPacketLengthMax": "Bwd Packet Length Max",
        "bwdPacketLengthMin": "Bwd Packet Length Min",
        "bwdPacketLengthMean": "Bwd Packet Length Mean",
        "bwdPacketLengthStd": "Bwd Packet Length Std",
        "flowBytesPerSec": "Flow Bytes/s",
        "flowPacketsPerSec": "Flow Packets/s",
        "flowIatMean": "Flow IAT Mean",
        "flowIatStd": "Flow IAT Std",
        "flowIatMax": "Flow IAT Max",
        "flowIatMin": "Flow IAT Min",
        "fwdIatTotal": "Fwd IAT Total",
        "fwdIatMean": "Fwd IAT Mean",
        "fwdIatStd": "Fwd IAT Std",
        "fwdIatMax": "Fwd IAT Max",
        "fwdIatMin": "Fwd IAT Min",
        "bwdIatTotal": "Bwd IAT Total",
        "bwdIatMean": "Bwd IAT Mean",
        "bwdIatStd": "Bwd IAT Std",
        "bwdIatMax": "Bwd IAT Max",
        "bwdIatMin": "Bwd IAT Min",
        "fwdPshFlags": "Fwd PSH Flags",
        "bwdPshFlags": "Bwd PSH Flags",
        "fwdUrgFlags": "Fwd URG Flags",
        "bwdUrgFlags": "Bwd URG Flags",
        "fwdRstFlags": "Fwd RST Flags",
        "bwdRstFlags": "Bwd RST Flags",
        "fwdHeaderLength": "Fwd Header Length",
        "bwdHeaderLength": "Bwd Header Length",
        "fwdPacketsPerSec": "Fwd Packets/s",
        "bwdPacketsPerSec": "Bwd Packets/s",
        "packetLengthMin": "Packet Length Min",
        "packetLengthMax": "Packet Length Max",
        "packetLengthMean": "Packet Length Mean",
        "packetLengthStd": "Packet Length Std",
        "packetLengthVar": "Packet Length Variance",
        "finCount": "FIN Flag Count",
        "synCount": "SYN Flag Count",
        "rstCount": "RST Flag Count",
        "pshCount": "PSH Flag Count",
        "ackCount": "ACK Flag Count",
        "urgCount": "URG Flag Count",
        "cwrCount": "CWR Flag Count",
        "eceCount": "ECE Flag Count",
        "downUpRatio": "Down/Up Ratio",
        "avgPacketSize": "Average Packet Size",
        "fwdSegmentSizeAvg": "Fwd Segment Size Avg",
        "bwdSegmentSizeAvg": "Bwd Segment Size Avg",
        "fwdBytesPerBulkAvg": "Fwd Bytes/Bulk Avg",
        "fwdPacketsPerBulkAvg": "Fwd Packet/Bulk Avg",
        "fwdBulkRateAvg": "Fwd Bulk Rate Avg",
        "bwdBytesPerBulkAvg": "Bwd Bytes/Bulk Avg",
        "bwdPacketsPerBulkAvg": "Bwd Packet/Bulk Avg",
        "bwdBulkRateAvg": "Bwd Bulk Rate Avg",
        "subflowFwdPackets": "Subflow Fwd Packets",
        "subflowFwdBytes": "Subflow Fwd Bytes",
        "subflowBwdPackets": "Subflow Bwd Packets",
        "subflowBwdBytes": "Subflow Bwd Bytes",
        "fwdInitWinBytes": "FWD Init Win Bytes",
        "bwdInitWinBytes": "Bwd Init Win Bytes",
        "fwdActDataPackets": "Fwd Act Data Pkts",
        "bwdActDataPackets": "Bwd Act Data Pkts",
        "fwdSegSizeMin": "Fwd Seg Size Min",
        "bwdSegSizeMin": "Bwd Seg Size Min",
        "activeMean": "Active Mean",
        "activeStd": "Active Std",
        "activeMax": "Active Max",
        "activeMin": "Active Min",
        "idleMean": "Idle Mean",
        "idleStd": "Idle Std",
        "idleMax": "Idle Max",
        "idleMin": "Idle Min",
        "icmpCode": "ICMP Code",
        "icmpType": "ICMP Type",
        "fwdTCPRetransCount": "Fwd TCP Retrans. Count",
        "bwdTCPRetransCount": "Bwd TCP Retrans. Count",
        "totalTCPRetransCount": "Total TCP Retrans. Count",
        "cummConnectionTime": "Total Connection Flow Time",
        "label": "Label"
    }
    
    @abstractmethod
    def predict(self, rows: list[dict]) -> list[bool]:
        pass
